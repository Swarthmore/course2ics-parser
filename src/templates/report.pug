doctype html

html(lang='en')

  head
    style
      include ./report.css

  body

  .container
    .input-group
      span.label Start typing to search
      input.search
    .search-results

    script.
      // Get the data json that will be used as a source for the searches
      const data = !{results}

      // DOM elements
      const $label = document.querySelector('.label')
      const $inputGroup = document.querySelector('.input-group')
      const $search = document.querySelector('.search')
      const $results = document.querySelector('.search-results')
      const $container = document.querySelector('.container')
      const $numResultsFound = document.querySelector('.num-results-found')

      // Create a placeholder for the search results
      // Here, we will use setters and getters so that we can listen
      // for when the data changes
      const searchResults = {
        _data: [],
        _dataListener: function (val) {},
        set data(val) {
          this._data = val
          this._dataListener(val)
        },
        get data() {
          return this._data
        },
        registerListener: function(listener) {
          this._dataListener = listener
        }
      }

      searchResults.registerListener(newTodos => {
    
        // Clear out the old search results
        while ($results.firstChild) {
          $results.removeChild($results.firstChild);
        }
    
        // Render how many results were found
        const $el = document.createElement('div')
        $el.classList.add('num-results')
        $el.innerText = `${newTodos.length} results found`
        $results.appendChild($el)
    
        // Render the new search values to the dom
        newTodos.forEach(item => {
          const $el = document.createElement('div')
          $el.classList.add('search-result')
          $el.innerHTML = `<strong>${item.title}</strong> - ${item.instructor} - ${item.subject}${item.course}${item.section} - ${item.email} - ${item.days} ${item.times}`
          // Add event listener so when a user clicks on teh item, they will be 
          // taken to the ics file download
          $el.addEventListener('click', () => {
            window.open(item.filename)
          })
          $results.appendChild($el)
        })
      })

      $search.addEventListener('focus', () => {
        $label.innerText = 'Commence the searching üïµÔ∏è'
        $label.classList.add('active')
      })

      $search.addEventListener('blur', () => {
        if ($search.value === '') {
          $label.innerText = 'Start typing to search'
          $label.classList.remove('active')
        }
      })

      $search.addEventListener('keyup', event => {

        const val = event.target.value

        if (val.length === 0) {
          document.body.classList.remove('has-results')
          $container.classList.remove('has-results')
          $search.classList.remove('has-results')
          $inputGroup.classList.remove('has-results')
          searchResults.data = []
          // Clear out the old search results
          while ($results.firstChild) {
            $results.removeChild($results.firstChild);
          }
          return
        }
    
        document.body.classList.add('has-results')
        $container.classList.add('has-results')
        $search.classList.add('has-results')
        $inputGroup.classList.add('has-results')
    
        // Check to see if the val matches the title of any of the todos
        const filtered = data.filter(row => {
          if (row.title.toLowerCase().includes(val.toLowerCase())) {
            return row
          }
        })

        if (filtered.length === 0) {
          console.log('none found')
          const $noneFound = document.createElement('div')
          $noneFound.innerText = '0 Results found ‚òπÔ∏è'
          $results.appendChild($noneFound)
        }
        searchResults.data = filtered
      })