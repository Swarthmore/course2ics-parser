const{RRule:e}=require("rrule"),t=require("fs").promises,r=require("papaparse"),a=require("ics"),i=require("moment"),{validateArgs:n,validateRow:s}=require("./validators"),{daysFromString:o,timeDiff:c,firstDayAfterDate:u,flipName:l}=require("./helpers"),f=require("path"),m=require("pug");i().format(),i.suppressDeprecationWarnings=!0,module.exports={parse:async function(m){const y=e=>{m.verbose&&console.debug("string"==typeof e?e:JSON.stringify(e))};async function w({title:t,subject:r,course:n,section:s,instructor:f,email:m,days:y,times:w,fromDate:d,toDate:p}){const D=o(y),b=new e({freq:e.WEEKLY,byweekday:D.map(t=>{switch(t){case"U":return e.SU;case"M":return e.MO;case"T":return e.TU;case"W":return e.WE;case"R":return e.TH;case"F":return e.FR;case"S":return e.SA}}).filter(e=>e),until:new Date(p)}),g=u(d,y,w,i).format("YYYY-M-D-H-m").split("-"),h=c(w),[,$]=b.toString().split("RRULE:"),q={start:g,duration:h,recurrenceRule:$,title:`${r} ${n} ${s}`,description:t,status:"CONFIRMED",organizer:{name:l(f),email:m}};return new Promise((e,t)=>{a.createEvent(q,(r,a)=>{r&&t(r),e(a)})})}async function d(e,r){try{return await t.writeFile(r,e),r}catch(e){return e}}const p=await n(m),D=f.normalize(p.outputDir),b=await async function(e){try{return await t.readFile(e,"utf8")}catch(e){return e}}(f.normalize(p.inputFile));return async function(){return new Promise((e,a)=>{r.parse(b,{complete:async r=>{let i=[];const n=r.data.slice(1);0===n.length&&a("No rows could be parsed from csv");let o=0;var c,u=!0,l=!1;try{for(var m,b,g=function(e){var t;if("undefined"!=typeof Symbol){if(Symbol.asyncIterator&&null!=(t=e[Symbol.asyncIterator]))return t.call(e);if(Symbol.iterator&&null!=(t=e[Symbol.iterator]))return t.call(e)}throw new TypeError("Object is not async iterable")}(n);u=(m=await g.next()).done,b=await m.value,!u;u=!0){let e=b;try{y("-------------------------------------------"),y("Processing row "+o),y(e);const t=await s(e),[r,a,n,c,u,l,m,b,g,h,$,q]=t,S=await w({title:r,subject:a,course:n,section:q,instructor:c,email:l,days:b,times:h,fromDate:p.fromDate,toDate:p.toDate}),_=`${r.replace(/[/\\?%*:|"<>\s]/g,"-")}__${q}_${b.replace(/,/g,"")}__${h.replace(/[:-\s]/g,"")}`,j=".ics",R=f.join(D,_+j),v=await d(S,R);if(y("Created "+v),i.push({title:r,subject:a,course:n,section:q,instructor:c,email:l,days:b,times:h,fromDate:p.fromDate,toDate:p.toDate,filename:f.basename(v)}),g&&$){const e=await w({title:r,subject:a,course:n,section:q,instructor:c,email:l,days:g,times:$,fromDate:p.fromDate,toDate:p.toDate}),t=`${r.replace(/[/\\?%*:|"<>\s]/g,"-")}__${q}_${g.replace(/,/g,"")}__${$.replace(/[:-\s]/g,"")}`,s=f.join(D,t+j),o=await d(e,s);y("Created "+o),i.push({title:r,subject:a,course:n,section:q,instructor:c,email:l,days:g,times:$,fromDate:p.fromDate,toDate:p.toDate,filename:f.basename(o)})}}catch(e){y(e)}finally{o++}}}catch(e){l=!0,c=e}finally{try{u||null==g.return||await g.return()}finally{if(l)throw c}}await t.writeFile(D+"/index.json",JSON.stringify(i),"utf8"),y("Done!"),e(i)}})})}()},makeSite:async function(e){const r=await t.readdir(e),[a]=r.filter(e=>".json"===f.extname(e));if(!a)throw new Error("No index file found");const i=await t.readFile(f.join(e,a)),n=m.compileFile(f.join(process.cwd(),"src","templates","report.pug"))({results:i});await t.writeFile(f.join(e,"index.html"),n,"utf8")}};
//# sourceMappingURL=course2ics-parser.module.js.map
